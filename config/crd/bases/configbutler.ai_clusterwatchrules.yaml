---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.19.0
  name: clusterwatchrules.configbutler.ai
spec:
  group: configbutler.ai
  names:
    kind: ClusterWatchRule
    listKind: ClusterWatchRuleList
    plural: clusterwatchrules
    singular: clusterwatchrule
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.gitRepoConfigRef.name
      name: GitRepoConfig
      type: string
    - jsonPath: .spec.gitRepoConfigRef.namespace
      name: Namespace
      type: string
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          ClusterWatchRule watches resources across the entire cluster.
          It provides the ability to audit both cluster-scoped resources (Nodes, ClusterRoles, CRDs)
          and namespaced resources across multiple namespaces with per-rule filtering.

          Security model:
            - ClusterWatchRule is cluster-scoped and requires cluster-admin permissions
            - Referenced GitRepoConfig must have accessPolicy.allowClusterRules set to true
            - Each rule can independently specify Cluster or Namespaced scope
            - Namespaced rules can optionally filter by namespace labels

          Use cases:
            - Audit cluster infrastructure (Nodes, PersistentVolumes, StorageClasses)
            - Audit RBAC changes (ClusterRoles, ClusterRoleBindings)
            - Audit CRD installations and updates
            - Audit resources across multiple namespaces (e.g., all production namespaces)
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: spec defines the desired state of ClusterWatchRule.
            properties:
              gitRepoConfigRef:
                description: |-
                  GitRepoConfigRef references the GitRepoConfig to use.
                  Since ClusterWatchRule is cluster-scoped and GitRepoConfig is namespace-scoped,
                  both name and namespace must be specified.
                properties:
                  name:
                    description: Name of the GitRepoConfig.
                    minLength: 1
                    type: string
                  namespace:
                    description: Namespace containing the GitRepoConfig.
                    minLength: 1
                    type: string
                required:
                - name
                - namespace
                type: object
              rules:
                description: |-
                  Rules define which resources to watch.
                  Multiple rules create a logical OR - a resource matching ANY rule is watched.
                  Each rule can specify cluster-scoped or namespaced resources.
                items:
                  description: |-
                    ClusterResourceRule defines which resources to watch with scope control.
                    Each rule can independently specify whether it watches cluster-scoped or
                    namespaced resources, with optional namespace filtering for namespaced resources.
                  properties:
                    apiGroups:
                      description: |-
                        APIGroups to match. Empty string ("") matches the core API group.
                        If empty, matches all API groups.
                        Wildcards supported: "*" matches all groups.
                        Examples:
                          - [""] matches core API (nodes, namespaces)
                          - ["rbac.authorization.k8s.io"] matches RBAC resources
                          - ["*"] or [] matches all groups
                      items:
                        type: string
                      type: array
                    apiVersions:
                      description: |-
                        APIVersions to match. If empty, matches all versions.
                        Wildcards supported: "*" matches all versions.
                        Examples:
                          - ["v1"] matches only v1 version
                          - ["*"] or [] matches all versions
                      items:
                        type: string
                      type: array
                    namespaceSelector:
                      description: |-
                        NamespaceSelector filters which namespaces to watch.
                        Only evaluated when Scope is "Namespaced".
                        If omitted for Namespaced scope, watches resources in ALL namespaces.
                        If specified, only watches resources in namespaces matching the selector.
                        Ignored when Scope is "Cluster".
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: |-
                              A label selector requirement is a selector that contains values, a key, and an operator that
                              relates the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: |-
                                  operator represents a key's relationship to a set of values.
                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                type: string
                              values:
                                description: |-
                                  values is an array of string values. If the operator is In or NotIn,
                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced during a strategic
                                  merge patch.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: |-
                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                          type: object
                      type: object
                      x-kubernetes-map-type: atomic
                    operations:
                      description: |-
                        Operations to watch. If empty, watches all operations (CREATE, UPDATE, DELETE).
                        Supports: CREATE, UPDATE, DELETE, or * (wildcard for all operations).
                        Examples:
                          - ["CREATE", "UPDATE"] watches only creation and updates
                          - ["*"] or [] watches all operations
                      items:
                        description: OperationType specifies the type of operation
                          that triggers a watch event.
                        enum:
                        - CREATE
                        - UPDATE
                        - DELETE
                        - '*'
                        type: string
                      type: array
                    resources:
                      description: |-
                        Resources to match (plural names like "nodes", "clusterroles").
                        This field is required and determines which resource types trigger this rule.
                        Wildcard semantics follow Kubernetes admission webhook patterns:
                          - "*" matches all resources
                          - "nodes" matches exactly nodes
                          - "pods" matches exactly pods (for namespaced scope)
                      items:
                        type: string
                      minItems: 1
                      type: array
                    scope:
                      allOf:
                      - enum:
                        - Cluster
                        - Namespaced
                      - enum:
                        - Cluster
                        - Namespaced
                      description: |-
                        Scope defines whether this rule watches Cluster-scoped or Namespaced resources.
                        - "Cluster": For cluster-scoped resources (Nodes, ClusterRoles, CRDs, etc.).
                                     The namespaceSelector field is ignored for cluster-scoped rules.
                        - "Namespaced": For namespaced resources (Pods, Deployments, Secrets, etc.).
                                        Optionally filtered by namespaceSelector.
                                        If namespaceSelector is omitted, watches resources in ALL namespaces.
                      type: string
                  required:
                  - resources
                  - scope
                  type: object
                minItems: 1
                type: array
            required:
            - gitRepoConfigRef
            - rules
            type: object
          status:
            description: status defines the observed state of ClusterWatchRule.
            properties:
              conditions:
                description: Conditions represent the latest available observations
                  of the ClusterWatchRule's state.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
