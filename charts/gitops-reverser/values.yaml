# Default values for gitops-reverser.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: YOUR_IMAGE_REPOSITORY
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  runAsNonRoot: true
  runAsUser: 65532
  runAsGroup: 65532
  fsGroup: 65532
  seccompProfile:
    type: RuntimeDefault

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 65532

# Controller manager configuration
controllerManager:
  # Enable leader election for controller manager
  leaderElection: true
  # Metrics configuration
  metrics:
    port: 8080
  # Enable HTTP/2 (disabled by default for security)
  enableHTTP2: false

# Webhook configuration
webhook:
  enabled: true
  # Webhook server configuration
  server:
    port: 9443
    certPath: "/tmp/k8s-webhook-server/serving-certs"
    certName: "tls.crt"
    certKey: "tls.key"
  
  # Mutating webhook configuration
  mutating:
    enabled: true
    failurePolicy: Fail
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    # Rules for mutating webhook are now defined in the template
    # Namespace selector for mutating webhook
    namespaceSelector:
      matchExpressions:
      - key: name
        operator: NotIn
        values: ["kube-system", "kube-public", "kube-node-lease"]
    # Object selector for mutating webhook
    objectSelector: {}
  
  # Validating webhook configuration
  validating:
    enabled: true
    failurePolicy: Ignore
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    # Rules for validating webhook (watches all resources)
    rules:
      - operations: ["CREATE", "UPDATE", "DELETE"]
        apiGroups: ["*"]
        apiVersions: ["*"]
        resources: ["*"]
    # Namespace selector for validating webhook
    namespaceSelector: {}
    # Object selector for validating webhook
    objectSelector: {}

# Service configuration
service:
  type: ClusterIP
  port: 443
  targetPort: 9443

# TLS certificate management
certificates:
  # Use cert-manager for certificate management
  certManager:
    enabled: true
    # Certificate issuer
    issuer:
      name: selfsigned-issuer
      kind: Issuer
      # Create a self-signed issuer if none exists
      create: true
    # Webhook certificate
    webhook:
      secretName: webhook-server-cert
      dnsNames:
        - webhook-service
        - webhook-service.system.svc
        - webhook-service.system.svc.cluster.local
    # Metrics certificate is now part of the webhook certificate

# RBAC configuration
rbac:
  create: true
  # Additional rules for the service account
  rules:
    - apiGroups: [""]
      resources: ["pods"]
      verbs: ["get", "patch"]
    - apiGroups: [""]
      resources: ["events"]
      verbs: ["create"]
    - apiGroups: ["coordination.k8s.io"]
      resources: ["leases"]
      verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

# Ingress configuration (typically not needed for webhooks)
ingress:
  enabled: false
  annotations: {}
  hosts:
    - host: chart-example.local
      paths: []
  tls: []

# Resource limits and requests
resources:
  limits:
    cpu: 500m
    memory: 128Mi
  requests:
    cpu: 10m
    memory: 64Mi

# Node selection
nodeSelector: {}

# Tolerations
tolerations: []

# Pod affinity/anti-affinity
affinity: {}

# Pod disruption budget
podDisruptionBudget:
  enabled: false
  minAvailable: 1
  # maxUnavailable: 1

# Monitoring and observability
monitoring:
  # Enable ServiceMonitor for Prometheus
  serviceMonitor:
    enabled: false
    namespace: ""
    labels: {}
    interval: 30s
    scrapeTimeout: 10s
    path: /metrics
    port: https

# Logging configuration
logging:
  level: info
  development: false
  encoder: json
  # Additional logging configuration
  stacktraceLevel: error
  
# Environment variables
env: []
  # - name: EXAMPLE_VAR
  #   value: "example-value"

# Additional volumes
volumes: []
  # - name: example-volume
  #   configMap:
  #     name: example-configmap

# Additional volume mounts
volumeMounts: []
  # - name: example-volume
  #   mountPath: /etc/example
  #   readOnly: true

# Network policies
networkPolicy:
  enabled: false
  # Ingress rules
  ingress: []
  # Egress rules
  egress: []
