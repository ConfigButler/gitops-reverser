namespaceCreation:
  enabled: true
  labels: {}
  annotations: {}
replicaCount: 2
leaderOnlyService:
  enabled: true
image:
  repository: ghcr.io/configbutler/gitops-reverser
  pullPolicy: IfNotPresent
  tag: 0.8.1
imagePullSecrets: []
nameOverride: ''
fullnameOverride: ''
serviceAccount:
  create: true
  annotations: {}
  name: ''
podAnnotations: {}
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 65532
  runAsGroup: 65532
  fsGroup: 65532
  seccompProfile:
    type: RuntimeDefault
securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 65532
controllerManager:
  leaderElection: true
  healthProbe:
    bindAddress: ':8081'
  metrics:
    port: 8080
    bindAddress: 127.0.0.1:8080
  enableHTTP2: false
webhook:
  enabled: true
  server:
    port: 9443
    certPath: /tmp/k8s-webhook-server/serving-certs
    certName: tls.crt
    certKey: tls.key
  validating:
    enabled: true
    failurePolicy: Ignore
    sideEffects: None
    admissionReviewVersions:
      - v1
      - v1beta1
    rules:
      - operations:
          - CREATE
          - UPDATE
          - DELETE
        apiGroups:
          - '*'
        apiVersions:
          - '*'
        resources:
          - '*'
    namespaceSelector:
      matchExpressions:
        - key: kubernetes.io/metadata.name
          operator: NotIn
          values:
            - kube-system
            - kube-public
            - kube-node-lease
    objectSelector: {}
certificates:
  name: null
  certManager:
    enabled: true
    issuer:
      name: selfsigned-issuer
      kind: Issuer
      create: true
rbac:
  create: true
resources:
  limits:
    cpu: 500m
    memory: 128Mi
  requests:
    cpu: 10m
    memory: 64Mi
nodeSelector: {}
tolerations: []
affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: gitops-reverser
          topologyKey: kubernetes.io/hostname
podDisruptionBudget:
  enabled: true
  minAvailable: 1
monitoring:
  serviceMonitor:
    enabled: false
    namespace: ''
    labels: {}
    interval: 30s
    scrapeTimeout: 10s
    path: /metrics
    port: https
logging:
  level: info
  development: false
  encoder: json
  stacktraceLevel: error
labels:
  managedBy: Helm
